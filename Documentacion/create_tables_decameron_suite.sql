-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;

CREATE TABLE IF NOT EXISTS public.acomodaciones
(
    id bigserial NOT NULL,
    nombre character varying(255) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone,
    CONSTRAINT acomodaciones_pkey PRIMARY KEY (id),
    CONSTRAINT acomodaciones_nombre_unique UNIQUE (nombre)
);

CREATE TABLE IF NOT EXISTS public.cache
(
    key character varying(255) COLLATE pg_catalog."default" NOT NULL,
    value text COLLATE pg_catalog."default" NOT NULL,
    expiration integer NOT NULL,
    CONSTRAINT cache_pkey PRIMARY KEY (key)
);

CREATE TABLE IF NOT EXISTS public.cache_locks
(
    key character varying(255) COLLATE pg_catalog."default" NOT NULL,
    owner character varying(255) COLLATE pg_catalog."default" NOT NULL,
    expiration integer NOT NULL,
    CONSTRAINT cache_locks_pkey PRIMARY KEY (key)
);

CREATE TABLE IF NOT EXISTS public.ciudades
(
    id bigserial NOT NULL,
    nombre character varying(255) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone,
    CONSTRAINT ciudades_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.failed_jobs
(
    id bigserial NOT NULL,
    uuid character varying(255) COLLATE pg_catalog."default" NOT NULL,
    connection text COLLATE pg_catalog."default" NOT NULL,
    queue text COLLATE pg_catalog."default" NOT NULL,
    payload text COLLATE pg_catalog."default" NOT NULL,
    exception text COLLATE pg_catalog."default" NOT NULL,
    failed_at timestamp(0) without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT failed_jobs_pkey PRIMARY KEY (id),
    CONSTRAINT failed_jobs_uuid_unique UNIQUE (uuid)
);

CREATE TABLE IF NOT EXISTS public.habitaciones
(
    id bigserial NOT NULL,
    hotel_id bigint NOT NULL,
    tipo_habitacion_id bigint NOT NULL,
    acomodacion_id bigint NOT NULL,
    cantidad integer NOT NULL,
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone,
    CONSTRAINT habitaciones_pkey PRIMARY KEY (id),
    CONSTRAINT uq_habitacion_config UNIQUE (hotel_id, tipo_habitacion_id, acomodacion_id)
);

CREATE TABLE IF NOT EXISTS public.hoteles
(
    id bigserial NOT NULL,
    nombre character varying(255) COLLATE pg_catalog."default" NOT NULL,
    direccion character varying(255) COLLATE pg_catalog."default" NOT NULL,
    ciudad_id bigint NOT NULL,
    nit character varying(255) COLLATE pg_catalog."default" NOT NULL,
    numero_habitaciones integer NOT NULL,
    gerente_id bigint NOT NULL,
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone,
    CONSTRAINT hoteles_pkey PRIMARY KEY (id),
    CONSTRAINT hoteles_nit_unique UNIQUE (nit),
    CONSTRAINT hoteles_nombre_unique UNIQUE (nombre)
);

CREATE TABLE IF NOT EXISTS public.job_batches
(
    id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    total_jobs integer NOT NULL,
    pending_jobs integer NOT NULL,
    failed_jobs integer NOT NULL,
    failed_job_ids text COLLATE pg_catalog."default" NOT NULL,
    options text COLLATE pg_catalog."default",
    cancelled_at integer,
    created_at integer NOT NULL,
    finished_at integer,
    CONSTRAINT job_batches_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.jobs
(
    id bigserial NOT NULL,
    queue character varying(255) COLLATE pg_catalog."default" NOT NULL,
    payload text COLLATE pg_catalog."default" NOT NULL,
    attempts smallint NOT NULL,
    reserved_at integer,
    available_at integer NOT NULL,
    created_at integer NOT NULL,
    CONSTRAINT jobs_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.migrations
(
    id serial NOT NULL,
    migration character varying(255) COLLATE pg_catalog."default" NOT NULL,
    batch integer NOT NULL,
    CONSTRAINT migrations_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.password_reset_tokens
(
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    token character varying(255) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp(0) without time zone,
    CONSTRAINT password_reset_tokens_pkey PRIMARY KEY (email)
);

CREATE TABLE IF NOT EXISTS public.reglas_acomodacion
(
    id bigserial NOT NULL,
    tipo_habitacion_id bigint NOT NULL,
    acomodacion_id bigint NOT NULL,
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone,
    CONSTRAINT reglas_acomodacion_pkey PRIMARY KEY (id),
    CONSTRAINT uq_regla_tipo_acomodacion UNIQUE (tipo_habitacion_id, acomodacion_id)
);

CREATE TABLE IF NOT EXISTS public.roles
(
    id bigserial NOT NULL,
    nombre character varying(255) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone,
    CONSTRAINT roles_pkey PRIMARY KEY (id),
    CONSTRAINT roles_nombre_unique UNIQUE (nombre)
);

CREATE TABLE IF NOT EXISTS public.sessions
(
    id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    user_id bigint,
    ip_address character varying(45) COLLATE pg_catalog."default",
    user_agent text COLLATE pg_catalog."default",
    payload text COLLATE pg_catalog."default" NOT NULL,
    last_activity integer NOT NULL,
    CONSTRAINT sessions_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tipos_habitacion
(
    id bigserial NOT NULL,
    nombre character varying(255) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone,
    CONSTRAINT tipos_habitacion_pkey PRIMARY KEY (id),
    CONSTRAINT tipos_habitacion_nombre_unique UNIQUE (nombre)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id bigserial NOT NULL,
    nombre character varying(255) COLLATE pg_catalog."default" NOT NULL,
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    rol_id bigint,
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone,
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_email_unique UNIQUE (email)
);

ALTER TABLE IF EXISTS public.habitaciones
    ADD CONSTRAINT habitaciones_acomodacion_id_foreign FOREIGN KEY (acomodacion_id)
    REFERENCES public.acomodaciones (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.habitaciones
    ADD CONSTRAINT habitaciones_hotel_id_foreign FOREIGN KEY (hotel_id)
    REFERENCES public.hoteles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.habitaciones
    ADD CONSTRAINT habitaciones_tipo_habitacion_id_foreign FOREIGN KEY (tipo_habitacion_id)
    REFERENCES public.tipos_habitacion (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.hoteles
    ADD CONSTRAINT hoteles_ciudad_id_foreign FOREIGN KEY (ciudad_id)
    REFERENCES public.ciudades (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.hoteles
    ADD CONSTRAINT hoteles_gerente_id_foreign FOREIGN KEY (gerente_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.reglas_acomodacion
    ADD CONSTRAINT reglas_acomodacion_acomodacion_id_foreign FOREIGN KEY (acomodacion_id)
    REFERENCES public.acomodaciones (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.reglas_acomodacion
    ADD CONSTRAINT reglas_acomodacion_tipo_habitacion_id_foreign FOREIGN KEY (tipo_habitacion_id)
    REFERENCES public.tipos_habitacion (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT users_rol_id_foreign FOREIGN KEY (rol_id)
    REFERENCES public.roles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;

END;